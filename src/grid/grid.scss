//////////////////////////////////////////////////////////
// Grid
//////////////////////////////////////////////////////////

$grid-directions: (
  "h": "grid-template-columns",
  "v": "grid-template-rows"
);

.#{$prefix}#{$grid} {
  display: grid;
}

// genearte grid auto-flow classes
@each $direction-name, $direction-value in $grid-directions {
  @each $grid-value in $grids {
    .#{$prefix}#{$grid}-#{$direction-name}a {
      @if $direction-name == h {
        grid-auto-flow: column;
      }
      @if $direction-name == v {
        grid-auto-flow: row;
      }
    }
  }
}

// genearte grid auto-flow classes with media queries
@each $mq in $media-queries {
  @each $mq-name, $mq-value in $mq {
    @each $direction-name, $direction-value in $grid-directions {
      @each $grid-value in $grids {
        .#{$prefix}#{$grid}-#{$direction-name}a--#{$mq-name} {
          @media #{$mq-value} {
            @if direction-name == h {
              grid-auto-flow: column;
            }
            @if direction-name == v {
              grid-auto-flow: row;
            }
          }
        }
      }
    }
  }
}

// generate grid classes (one value for both directions)
@each $grid-value in $grids {
  .#{$prefix}#{$grid}-#{$grid-value} {
    grid-template-columns: repeat($grid-value, 1fr);
    grid-template-rows: repeat($grid-value, 1fr);
  }
}

// generate grid classes with media queries (one value for both directions)
@each $mq in $media-queries {
  @each $mq-name, $mq-value in $mq {
    @each $grid-value in $grids {
      .#{$prefix}#{$grid}-#{$grid-value}--#{$mq-name} {
        @media #{$mq-value} {
          grid-template-columns: repeat($grid-value, 1fr);
          grid-template-rows: repeat($grid-value, 1fr);
        }
      }
    }
  }
}

// generate grid direction classes (inividual values for both direction)
@each $direction-name, $direction-value in $grid-directions {
  @each $grid-value in $grids {
    .#{$prefix}#{$grid}-#{$direction-name}#{$grid-value} {
      #{$direction-value}: repeat($grid-value, 1fr);
    }
  }
}

// generate grid direction classes with media queries (inividual values for both direction)
@each $mq in $media-queries {
  @each $mq-name, $mq-value in $mq {
    @each $direction-name, $direction-value in $grid-directions {
      @each $grid-value in $grids {
        .#{$prefix}#{$grid}-#{$direction-name}#{$grid-value}--#{$mq-name} {
          @media #{$mq-value} {
            #{$direction-value}: repeat($grid-value, 1fr);
          }
        }
      }
    }
  }
}

//////////////////////////////////////////////////////////
// Grid gutters
//////////////////////////////////////////////////////////

$gutter-directions: (
  "h": "grid-column-gap",
  "v": "grid-row-gap"
);

// generate grid-gutters (same value for both directions)
@each $gutter-level, $gutter-multiplier in $size-multipliers {
  .#{$prefix}#{$grid}-g#{$gutter-level} {
    grid-column-gap: $gutter-multiplier * $base-spacing;
    grid-row-gap: $gutter-multiplier * $base-spacing;
  }
}

// generate grid-gutters with media queries (individual values for both directions)
@each $mq in $media-queries {
  @each $mq-name, $mq-value in $mq {
    @each $gutter-level, $gutter-multiplier in $size-multipliers {
      .#{$prefix}#{$grid}-g#{$gutter-level}--#{$mq-name} {
        @media #{$mq-value} {
          grid-column-gap: $gutter-multiplier * $base-spacing;
          grid-row-gap: $gutter-multiplier * $base-spacing;
        }
      }
    }
  }
}

// generate grid-gutters with directions
@each $direction-name, $direction-value in $gutter-directions {
  @each $gutter-level, $gutter-multiplier in $size-multipliers {
    .#{$prefix}#{$grid}-#{$direction-name}g#{$gutter-level} {
      #{$direction-value}: $gutter-multiplier * $base-spacing;
    }
  }
}

// generate grid-gutters with directions and media queries
@each $mq in $media-queries {
  @each $mq-name, $mq-value in $mq {
    @each $direction-name, $direction-value in $gutter-directions {
      @each $gutter-level, $gutter-multiplier in $size-multipliers {
        .#{$prefix}#{$grid}-#{$direction-name}g#{$gutter-level}--#{$mq-name} {
          @media #{$mq-value} {
            #{$direction-value}: $gutter-multiplier * $base-spacing;
          }
        }
      }
    }
  }
}
